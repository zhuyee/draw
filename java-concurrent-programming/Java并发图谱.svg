<?xml version="1.0" encoding="UTF-8"?>
<!-- Do not edit this file with editors other than diagrams.net -->
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" width="829px" height="1170px" viewBox="-0.5 -0.5 829 1170" content="&lt;mxfile host=&quot;app.diagrams.net&quot; modified=&quot;2023-03-30T07:37:22.836Z&quot; agent=&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/113.0.0.0 Safari/537.36&quot; etag=&quot;JbBVWvF0z6V0QRZUGHQr&quot; version=&quot;21.1.2&quot; type=&quot;github&quot;&gt;&lt;diagram name=&quot;第 1 页&quot; id=&quot;jQVPsj15WsTQjWok6gXP&quot;&gt;7V1bd9s4kv41euw9vIgk8EhSYvf2ps/0jGdnztk3RqJtTWTRS9NJ3L9+UUChCBAgJaWtKB5vP/RhQAqXKtTtqwK8iMuHrz939eP9b+222S+iYPt1Ea8WUcTTpfg/NLyohjRlquGu221VUzg03Oz+aLAxwNbn3bZ5sj7s23bf7x7txk17ODSb3mqru679gp9hd7ft3h71sb5rnIabTb13W/+52/b3qpVF2dD+S7O7u9cjhylXbz7Wm093Xft8wPEO7aFRbx5q3Q1O6um+3rZfjKZ4vYjLrm179fTwtWz2QFVNMfW7auItTblrDv0pP6hvt2376+3vP6XL//qfD4evf8Rt9tMSGfe53j8jLXC2/YsmjlxeA70Ei7j4cr/rm5vHegNvv4jdINru+4e9+FcoHvf1x2ZfEFXKdt92spt4Va3LVSI+ud3t90Z7la7KUsy4eOq79lOj32yb2/p5L1ZW3HX1dicWqd9IGsfFtn66l7OCYVsxoV0Pu28Jk3Rpg+T63HR989VoQlr93LQPTd+9iE9wC2cp8u2LZ0PcG5thGeBeqHET3lFfAzfEAzLkHObE3405Fa/StY85uv3HYk54KnPSILgUc6KrS842adh2+eMw5xgziGuvzowTBKU5bHOwFBNkMBgB7b/Xfd90B9kSBTHRWFsHsfzC5u4k4ZqtZXtmyZYELtV0W9fs63732bZYPkriCL+3OzGTKNA803ZIi1CYJnYfT+1zt2nwZ6YhOdLTqJu+7u6a3ulG8pVW/SfkzmW1UFAFXxQpPLBqwUN44NWiyBfrbJGHCxY420Hs5d5muy1EuEdMicOmer+7g42xEYxuRHsBkrETvkSOLx522y0M4xV4e9Pctof+BicV6n8r7yhM/6Q04lvNHu2ZuYoz82y65aUkNXHY9+t/i54CPxMLwb5EtshneCjh+f1xE9m3ZC7/SB6/CwNTv/zlCy4ZVQhpky1sDSIo5I8HC5a+Q4755Y9fWwAzD/8y4F8huZWzBStO0J8DHcPjro1D5pP8GPGGRR/j9JUYQd4HciK6tiSxEzmRrxeMoxLM2b8hJ8Lg2qzgJ7EiBe2Wv7Ys7HeP/zCef/Fz5vb2NtpsfJzZph/T5FKc4dfmjEaIRvYGjMpSsiZbsJXRkgKDwFUQhieXLRGoL14u1nzBlwsW6pbVO+Kjz+37znwMvXx0XT6h7Qqp7Th/fW33I/Mojq/OIw+kAVLDFoUyROGCr7EFfDvBNfGQvSMeLa9uqUIP1DF424JHK9CEYLxC4No7Yk12dda40MTf77um3n5oRXTyjliRLK/OChdmqJ775655R1xIw6tzwYcV+CIc4cEJ+79eLooVeGrviEdXh3NCFw/4tf5cIyLHUgg60aww6V0zcAPAPVsD867CKrZp/Kz6yJJl8mezGBOsYtc3/S5gUOY3mlPzcNu/MV+uL0I+9CAFkQG3maJODq5yLv3nPAJpej888oGe35dHejCDR7e7A3hlgU4vxMgrYJFSeDLhwCPIOYBtYog0QKgqdaHYefmVop+rsDEMru7YRS6MkP9V6cBUItUpPAjbVLwnHRiGVwezIx92EAGmkwcoPZBOSCBNpFJ6Qs4ATcjAdBWBzzEkCE9wNEVUqCilq5iCn5gLuRTdLuF7FNAcBTTP8RtAztWrwIALK+hH2MsolXUSHzvxdAdPes4KikplLku5pQnq9DzGpIjSE0KzA7aoXnndWz0WLEdOVRCphVS+2Fu4b4XJzmApuaKEHBCmSQRwxyGSpKC51OxwuURj0lkMxAEU3NF1e1cgJ67gBfFNscKHnOGgvMKx8mHOqUHtDPhSpKgywRYuYeqsQKNYLI2lMhggl0tlaqlHJx0bG2wJRpcFegig9pd61yOlxzRLYKHg4XLgqEK5YGPBz55eDpv7rj3s/hA6I1I9VgAbw8zyRb60+ANuF/EnwXngXqE1KwpJ9hbGhji+wuVpKxQSHAWHtt/dvoz+me+VqWNA0VynlXiue+Hmyv/y8V9QZBkZONIwezlXJiWPyTULSu2b5hEt6XSvCguZ63WOAgnCjSzFh7wwJcpHgXWstlvZHra7ftceqKXYt5tPu8PdX5+b5wZnNKlqfJoK5WEJDMkzTQsphGKfi9kpvQT9GK8odlI9j+3Tn0+J75tb6GGcEO/bxwmDZ2fDpyvQ1mlVleXrGK84yP4jcazVMvVYq/Bi1XuRD0Y1zZUtYrAtBPOqkxK0psYff2y4keNfmcqklJKeyhxIZXSo619ABRXa/lUS8ZV7C+Qyg8nzGP0gSnxxuRdFb9BhrBWxWWsjJiZ/BaC+ljKuppppoKaUr9wOlbpLsEMmJ1/IRphhpnuWDrMbCblK5byfq0GZjz5uHEZrpyHoFXn7HNaSJ/hQEMWiWY9BmhVlFQUf2Ym7xVA9YpkKbhFarkg039VOiOW20RAZxiyh1kGKUAn2A9U4gc1KFbNwcDTQf8qkSVZDqJ25luyW/fDU+EaW96jlDFpyNB+zH2akZCULhKktAm3R14bVJ2BJmwncvaFhSig6y+D/RWGPNbKkNEMyMYIakfbnYpyGGFGocthsmfQUZXFZEZ4p5jQW7Y23o9DLsqrWrwRqGgpdx/tuNOLV79nF1LuvStS3W6ZKPExtDBpAqcGlbJnxVU7rEEsVlPOjIxYWGZJCWlR+nBeGQ/Vto0t9yCMtXyvU2MrjBW82tKONDOeMHrz780xKrvTyMdqYmZg0LoX0iqDD0A5WYkkEqcf4/CpmhjghTT03KPX8dkS4qi7ik9EJi8hFFFikvzKlmF1Mit0sno4h14ZvpuJm6aAXyr6cJoau0IFgsgFEn9/SA2aYYeB7fND5qH1qT7qju0RwJ3/WDCfHar42m+e+8U8d/QwKcd+5FCVx8OPJkCcHq5ls7acI/CRU0JHPXZZbDSMN+xvsT8zP6JKcNNdTdfvOtLsuc8GwIekb3Y87aeWIlbqMLPZ1zMFY8fXcx7Oz946qQh7lS69018mx4Y/96qR5dJ6JEIgiRRQevMwz0hdHfjW9ePKYZWzAvLykNU9/fHTDhDpISe3KTRpEooQqdsOIJtNYjG9GSPOZj2diiul43OGKgxnOpJYoqFe8WYvvP7SbTzJkreBrWORahr70qQxO0GmTsxktAM1hhZHz8PFIAs34P5ExnnQHVawo2AdwtLJDGmomD0/YKs9mnEFMZvaMSYJSxoFSsRTcfnUqP379x28ahaxkJzSQQkkKCyVBk0xDE7phz4GVftgFF8Ux9sMzMDaSfZKwLDUYoYBDLhe19H2TgYrmmTFVk48hopVCRfPwu8iM9CrAd3mTAfA6qapLec/R0rX8y+w7W37PSZ+xRv+lfrr/TdDNk6A7C7ucdZRRGLVai4KyPWyeOyC4Hl9Jrc4UQAFSRnrRhkZZidPEFMBYi0KPff1R7EB35Olplu3jy18O/+zEfsq7rn75sHvqz1A9ltqVOAECV0pHy/CCh3MK1GcR35Q0gR9Nn7TdtulGc7iInMW6k+NylrBLyZnvHNeMPTwFqaBd7b4aJ1opcowRnfHHmWegM4kxyFmTRVmQEmSn2LRd+bA7fGq2/nc36Du1z0/2i9+7XSsk88XN2mm8PgpWzb5+wZ/NuCmnLGfiUIql75x6uwGqV5pUuRqpts3imRtqRLpWUKUX/K0R4tDVh166fpHOPVmZFDV8PHBcalBMaWJeezVRVDETP5Cf/h2I4pBALAFLFymrLqUD3Zyj2PtMOsat21A+GtfuG7e8NoRN3FwAyddZMqAEf42wqvLZBe8AQDacNTzkRL6V4aPhxwr4VTUTXM6ZfmU6faP6XDv3N8BcuZE+oyGUU8wNxInUhtwbuT5ZonYzDBrDg/gJD9+SdYJUx+WQ0thz8GTJvTbogvlstwbVrMCZPiBkyige+abaKvpGV3vP9WOkVRFPJWv0bf3IMgme2Omab+qHqYCWAphv6SffCpdmZHTyzeb54Xlf92KjTWukvG8fdpv/PPTN3dCDSnZycGFV7DlWr8qdLXxya/rhiW5xbcZICUrjDk6Cyi7HcyE2IBGHu2HJZGDcTkwlwjAi9mb3fUbIHoXUGYeVjkoivKZFxeZjL19b1zmuDkykWrzBlSeMzEhXHSld8HobM+NjtGLhRXMBy1tStmV5OWW79FSSTyjbiwXWsVtLbp7zOwOxym2fUB1+8oDz4BhVhoh5Y/NKF+toVwChKgL9zJR2hbVphaxcmcZjsaZR7UZSKhLQynX2Su3w8VU9IwNTWEchtXXg/LTlaTfEJY67cJfYIxQ8t7Sr8HgQ7aywiEd8mVdHaEIaV5bNFBp4Y2tcmBWgebN+hSyAoVfUjwkfrvWlR5Uu4yGw1p7sMDEOLWo+LNElOkodSqQzp+qC6JgXrYIOs5xaBbBkvk7kXIrQqVmNDR+7BUumvlesM+q8sTBM+eeRsWSjZmw8H7cfrq2ouRx9mYRb+DwpQ2PSacphlavec+Ndrw20LoeVbyQC5gOAdOU8M+tIZ2qnJ0qlcMOObbwz9655aD83k1PxbuOVzmExyRSqT/edHRS/Qna/tfpXMGqXQ4t956UnjNr4zr7XM2r++zlsh6Ss93uFraL/8rfng/r3GIbF09amw+Wv4qv0l17cZBRBG/WQ4hXLjfJX6ZXxzNKfUNufWdUOXKpZFbarko/BMZswORiAZ0buyMwLpTpJEsiJ6UGjQJ83D+yu1rIrNYHU17k7bcMQgwoNDFvjtRFqabIqRpV1EWXGhcFaicE0FBkpInHrimVcpypMxKAsGxxmX5Ic3pA+SPzWNMV7eFTlK4UkkxnGsQIzSEy1qm4NrhkpKPdl6OG21aGH2BbKgAGHKmSMhdE4tLYmYBaejqhs1NEigiNtj/jGJZyDNc27IZR0VIXYic/5lBsNLbCah0wx8mDYhm9KE1fR5cKLNPCcTPBr4iS7lCaOjuftbpqH+vG+xb1H7qDcmUU2bNqZQov8vFKH4RsnpeCte/ek8SfmOHhiUj+j8JU6ZZ1NVOqaae2pb5wCvMnEG5GnFPutX7VfDh/qfnN/hICGJ4xwqzQE6GNn2s9M9Kk+cr9VipVuJkvkg1mLGA2qUfifuQmrkfBLjhQq1a/sAplOysxLxcYSWz9NWTppODDRgAqynjk8R96fM9oJZH7Z7Hebou66Xd0d36ZMQ+oczzOiLzyBmBB1rP2ayaCLISeKcuwd89KShFGMPDozozJ5TB9wpLEQJ3JPQZhA/MjkqwpsZk+DgkCdD2D5xPmK6SjO3dyUNjq2rxEdO/1k4bEgBHEwAhCUbVRZ86WufYoCQx0YVOWjQ5UqfoZJOBVXNA8zJI70IVE8MGnnz6RcjY5/HB162E60VZwSoNFRSt14PlHflIFeJ8J2XMpA/wj4n+/s4HTC3xNon3XDzrSkVrPDenxLRqc51tLc6INdrzeGC3nTNRkzY/wL6OGtbHB7Gx88O15Av28Pd6TTtu0zFgdNTdQ0lRgDpBIMM5Oo30qcibzCPAPMxATXq2d6VKbRuRFhZiIS47RdXg4AF91z4u/QNVxGZDNe2dFSJ1rocBmCS4TImJBro7W9mkGFqajgTNq7GTUiOR1MNBwoQAfTAV92J5Rpz4wAsjOlcRaqRW5KvJdrUFo5wKMz55ZsVdo86onkchRga2UXtLv9UMGgKwC+SxXAwQkWo5svbNDIwn7IEpvjqJqZE5h9yi3as0R+S+b2kshkxhLfWf0JbPJSfwcpdk9zQvWQ1otl+wDL/ik/bH+6+QLVrFr5rNVt0LQn9SlyF3PiuQfEU46hd8+5httrvQLoe0rBqKJ/31mcEkdHReMcoPb26NS4O11jA1xttIC/paY3Ufq/z636AK5BFP+ZTVYW0jyVMExCdThTyWoBVitpi0Z1A8ZxWB9FhmOxkqKDMtbXfU/gi+Yhd6ZNmAqeCjold5SRU/R/NcpiRKFvvDmHsqQfVXweePafBSAnMmNk5uBGaDMlcNV558y/+c9x8iZNlxRiM2g6ZtZPuS98egbh3NaiuwnUfOJJattuwSnEobuYJ/mXr3x0mKdbJkGM3MHa3DnlRS7NrXsB4Xm0cs+zmIiySkXSfuKSsBPOzMwFICdQ+Ky7GZjUpjKPjSl3AlAIW5H+YKFOtC79iZoTl/EmHQjOLxevs/Rk9+Fil0HEvmPk58Rtzh0yR+Nl26KtjYtY8GzITMUERXv0K7Lso2+4cZ+XKskJjOSOUZsDoH7gK2Q20VLCRnO86WEMIRtgK0HBjA9Hg3J9eYy/psO9Bc7F3aZu6/HGPVNsIZ7YLAAgL0TGT0m0ycPR4UenAzMDkauURqr//BVB1hSbUEpjph8D2mVcF/QvtXUf/YruKnJzly7rpgb10DU2yobdck+XQQZ//TeC5L6iJPdjo36YwlDYS4avvFblTpH2Teb74dIzSvCBV9MfvzF9XZbry93cs/wB9LV7ZYG6q3eUp8z9lQfjq66o6M+sUB+lstxvRpW6uV9fmKeIveCU98DVLHaikJIB7gise4pX2oVZ4y08YvAiNdS/kZ1jxVCjCdqA0o2mnqmsu4yHvOMMNmN4uMJo5EbKxgN1D7NXGWDlLSXjSGWUbJsNIuej8fVQTmlRyLz4wPAw591gr92ZZl8U3PTd7nC3sK7apPtpqCTHDNoMmMu6n4F4Yye0MLIYXUmVOFdjGuWNo3V7yTc6oEaXFCiAWEObhUIp1WlBI3+PfxbtvHDCrXwOzOPAQ7rsU/Nyft9AqniI6lXfZbudLm88IfL4f6TxYkhjGEQ/gOXx/XHMGW3tFF5Egb6N3E0gmBXVp59zMVxjvPLJ/Qt3k6ZGT2Y4Wj8ub/FexmvojvEpIhelcGfxtrb0Ba9Q893KPrGlv+FedvHPrgUokd79LFZ//5vQcfDF/wE=&lt;/diagram&gt;&lt;/mxfile&gt;" style="background-color: rgb(255, 255, 255);"><defs/><g><rect x="0" y="760" width="827" height="409" fill-opacity="0.4" fill="#f6dcce" stroke="rgb(0, 0, 0)" stroke-opacity="0.4" stroke-dasharray="3 3" pointer-events="all"/><rect x="0" y="160" width="827" height="600" fill-opacity="0.4" fill="#f9f6e5" stroke="rgb(0, 0, 0)" stroke-opacity="0.4" stroke-dasharray="3 3" pointer-events="all"/><rect x="0" y="0" width="827" height="160" fill-opacity="0.4" fill="#d5e8d4" stroke="rgb(0, 0, 0)" stroke-opacity="0.4" stroke-dasharray="3 3" pointer-events="all"/><path d="M 120 1165 L 120 5" fill="none" stroke="rgb(0, 0, 0)" stroke-width="2" stroke-miterlimit="10" stroke-dasharray="2 6" pointer-events="stroke"/><rect x="25" y="60" width="70" height="40" fill="none" stroke="none" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 68px; height: 1px; padding-top: 80px; margin-left: 26px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 16px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; font-weight: bold; white-space: normal; overflow-wrap: normal;">并发基础</div></div></div></foreignObject><text x="60" y="85" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="16px" text-anchor="middle" font-weight="bold">并发基础</text></switch></g><rect x="0" y="480" width="120" height="40" fill="none" stroke="none" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 118px; height: 1px; padding-top: 500px; margin-left: 1px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 16px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; font-weight: bold; white-space: normal; overflow-wrap: normal;">JUC 并发工具包</div></div></div></foreignObject><text x="60" y="505" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="16px" text-anchor="middle" font-weight="bold">JUC 并发工具包</text></switch></g><rect x="25" y="960" width="70" height="40" fill="none" stroke="none" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 68px; height: 1px; padding-top: 980px; margin-left: 26px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 16px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; font-weight: bold; white-space: normal; overflow-wrap: normal;">底层原理</div></div></div></foreignObject><text x="60" y="985" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="16px" text-anchor="middle" font-weight="bold">底层原理</text></switch></g><rect x="160" y="20" width="120" height="40" rx="6" ry="6" fill="#d5e8d4" stroke="#82b366" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 118px; height: 1px; padding-top: 40px; margin-left: 161px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; font-weight: bold; white-space: normal; overflow-wrap: normal;">线程基础</div></div></div></foreignObject><text x="220" y="44" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle" font-weight="bold">线程基础</text></switch></g><rect x="160" y="100" width="120" height="40" rx="6" ry="6" fill="#d5e8d4" stroke="#82b366" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 118px; height: 1px; padding-top: 120px; margin-left: 161px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; font-weight: bold; white-space: normal; overflow-wrap: normal;">线程安全</div></div></div></foreignObject><text x="220" y="124" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle" font-weight="bold">线程安全</text></switch></g><rect x="160" y="190" width="120" height="40" rx="6" ry="6" fill="#fff2cc" stroke="#d6b656" transform="rotate(180,220,210)" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 118px; height: 1px; padding-top: 210px; margin-left: 161px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; font-weight: bold; white-space: normal; overflow-wrap: normal;">线程池</div></div></div></foreignObject><text x="220" y="214" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle" font-weight="bold">线程池</text></switch></g><rect x="160" y="260" width="120" height="40" rx="6" ry="6" fill="#fff2cc" stroke="#d6b656" transform="rotate(180,220,280)" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 118px; height: 1px; padding-top: 280px; margin-left: 161px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; font-weight: bold; white-space: normal; overflow-wrap: normal;">各种各样的“锁”</div></div></div></foreignObject><text x="220" y="284" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle" font-weight="bold">各种各样的“锁”</text></switch></g><rect x="160" y="330" width="120" height="40" rx="6" ry="6" fill="#fff2cc" stroke="#d6b656" transform="rotate(180,220,350)" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 118px; height: 1px; padding-top: 350px; margin-left: 161px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; font-weight: bold; white-space: normal; overflow-wrap: normal;">并发容器</div></div></div></foreignObject><text x="220" y="354" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle" font-weight="bold">并发容器</text></switch></g><rect x="160" y="400" width="120" height="40" rx="6" ry="6" fill="#fff2cc" stroke="#d6b656" transform="rotate(180,220,420)" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 118px; height: 1px; padding-top: 420px; margin-left: 161px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; font-weight: bold; white-space: normal; overflow-wrap: normal;">阻塞队列</div></div></div></foreignObject><text x="220" y="424" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle" font-weight="bold">阻塞队列</text></switch></g><rect x="160" y="470" width="120" height="40" rx="6" ry="6" fill="#fff2cc" stroke="#d6b656" transform="rotate(180,220,490)" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 118px; height: 1px; padding-top: 490px; margin-left: 161px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; font-weight: bold; white-space: normal; overflow-wrap: normal;">原子类</div></div></div></foreignObject><text x="220" y="494" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle" font-weight="bold">原子类</text></switch></g><rect x="160" y="540" width="120" height="40" rx="6" ry="6" fill="#fff2cc" stroke="#d6b656" transform="rotate(180,220,560)" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 118px; height: 1px; padding-top: 560px; margin-left: 161px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; font-weight: bold; white-space: normal; overflow-wrap: normal;">ThreadLocal</div></div></div></foreignObject><text x="220" y="564" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle" font-weight="bold">ThreadLocal</text></switch></g><rect x="160" y="610" width="120" height="40" rx="6" ry="6" fill="#fff2cc" stroke="#d6b656" transform="rotate(180,220,630)" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 118px; height: 1px; padding-top: 630px; margin-left: 161px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; font-weight: bold; white-space: normal; overflow-wrap: normal;">Future</div></div></div></foreignObject><text x="220" y="634" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle" font-weight="bold">Future</text></switch></g><rect x="160" y="680" width="120" height="40" rx="6" ry="6" fill="#fff2cc" stroke="#d6b656" transform="rotate(180,220,700)" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 118px; height: 1px; padding-top: 700px; margin-left: 161px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; font-weight: bold; white-space: normal; overflow-wrap: normal;">线程协作</div></div></div></foreignObject><text x="220" y="704" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle" font-weight="bold">线程协作</text></switch></g><rect x="160" y="800" width="120" height="40" rx="6" ry="6" fill="#f8cecc" stroke="#b85450" transform="rotate(180,220,820)" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 118px; height: 1px; padding-top: 820px; margin-left: 161px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; font-weight: bold; white-space: normal; overflow-wrap: normal;">Java 内存模型</div></div></div></foreignObject><text x="220" y="824" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle" font-weight="bold">Java 内存模型</text></switch></g><rect x="160" y="880" width="120" height="40" rx="6" ry="6" fill="#f8cecc" stroke="#b85450" transform="rotate(180,220,900)" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 118px; height: 1px; padding-top: 900px; margin-left: 161px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; font-weight: bold; white-space: normal; overflow-wrap: normal;">CAS 原理</div></div></div></foreignObject><text x="220" y="904" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle" font-weight="bold">CAS 原理</text></switch></g><rect x="160" y="960" width="120" height="40" rx="6" ry="6" fill="#f8cecc" stroke="#b85450" transform="rotate(180,220,980)" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 118px; height: 1px; padding-top: 980px; margin-left: 161px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; font-weight: bold; white-space: normal; overflow-wrap: normal;">死锁问题</div></div></div></foreignObject><text x="220" y="984" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle" font-weight="bold">死锁问题</text></switch></g><rect x="160" y="1040" width="120" height="40" rx="6" ry="6" fill="#f8cecc" stroke="#b85450" transform="rotate(180,220,1060)" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 118px; height: 1px; padding-top: 1060px; margin-left: 161px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; font-weight: bold; white-space: normal; overflow-wrap: normal;">final 关键字和不变性</div></div></div></foreignObject><text x="220" y="1064" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle" font-weight="bold">final 关键字和不变性</text></switch></g><rect x="160" y="1120" width="120" height="40" rx="6" ry="6" fill="#f8cecc" stroke="#b85450" transform="rotate(180,220,1140)" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 118px; height: 1px; padding-top: 1140px; margin-left: 161px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; font-weight: bold; white-space: normal; overflow-wrap: normal;">AQS 框架</div></div></div></foreignObject><text x="220" y="1144" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle" font-weight="bold">AQS 框架</text></switch></g><rect x="307.5" y="0" width="460" height="100" fill="none" stroke="none" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 458px; height: 1px; padding-top: 7px; margin-left: 310px;"><div data-drawio-colors="color: rgb(0, 0, 0); background-color: #E6FFCC; " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; background-color: rgb(230, 255, 204); white-space: normal; overflow-wrap: normal;">①为啥实现线程的方式本质上只有一种？<br />②如何正确停止线程？用 volatile 标记位的停止方法有啥不足？<br />③线程生命周期中的6种状态之间的转换？<br />④为什么 wait 方法必须在 synchronized 保护的同步代码中使用？<br />⑤为什么 wait / notify / notifyAll 被定义在 Object 类中，而 sleep 定义在 Thread 类中？<br />⑥分别用 wait / notify、Condition、BlockingQueue 的方式实现生产者消费者模式</div></div></div></foreignObject><text x="310" y="19" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">①为啥实现线程的方式本质上只有一种？②如何正确停止线程？用 volatile 标记位的停止方法有啥不足？...</text></switch></g><rect x="307.5" y="90" width="460" height="70" fill="none" stroke="none" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 458px; height: 1px; padding-top: 97px; margin-left: 310px;"><div data-drawio-colors="color: rgb(0, 0, 0); background-color: #CCFFE6; " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; background-color: rgb(204, 255, 230); white-space: normal; overflow-wrap: normal;">①什么是线程安全？线程不安全的场景？包括运行结果错误、发布或初始化错误以及活跃性问题，而活跃性问题又包括死锁、活锁和饥饿。<br />②注意线程安全的情况：操作共享资源或变量时；依赖时序的操作；不同数据间存在绑定关系；使用的类没声明自己是线程安全的。</div></div></div></foreignObject><text x="310" y="109" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">①什么是线程安全？线程不安全的场景？包括运行结果错误、发布或初始化错误以及活跃性问题，而活跃性问题又包括死锁、活锁和饥饿。&#xa;②注意线程安全的情况：操作共享资源或变量时；依赖时序的操作；不同数据间存在绑定关系；使用的类没声明自己是线程安全的。</text></switch></g><rect x="307.5" y="162" width="182.5" height="80" fill="none" stroke="none" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 181px; height: 1px; padding-top: 169px; margin-left: 310px;"><div data-drawio-colors="color: rgb(0, 0, 0); background-color: #FFFFCC; " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; background-color: rgb(255, 255, 204); white-space: normal; overflow-wrap: normal;">使用线程池的好处？<br />线程池的各个参数及含义？<br />线程池拒绝任务的几种拒绝策略？<br />常见有哪些线程池？<br />阻塞队列有哪些？</div></div></div></foreignObject><text x="310" y="181" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">使用线程池的好处？线程池的各个参数及含义？线程池拒绝任务的几种拒绝策略？常见有哪些线程池？阻塞队列有哪些？...</text></switch></g><rect x="530" y="162" width="182.5" height="80" fill="none" stroke="none" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 181px; height: 1px; padding-top: 169px; margin-left: 532px;"><div data-drawio-colors="color: rgb(0, 0, 0); background-color: #FFFFCC; " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; background-color: rgb(255, 255, 204); white-space: normal; overflow-wrap: normal;">怎么设置线程池的参数合理？<br />关闭线程池的方法有哪些？<br />怎么合理关闭线程池？<br />execute方法源码？</div></div></div></foreignObject><text x="532" y="181" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">怎么设置线程池的参数合理？关闭线程池的方法有哪些？怎么合理关闭线程池？execute方法源码？...</text></switch></g><rect x="307.5" y="242" width="472.5" height="80" fill="none" stroke="none" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 471px; height: 1px; padding-top: 249px; margin-left: 310px;"><div data-drawio-colors="color: rgb(0, 0, 0); background-color: #CCE5FF; " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; background-color: rgb(204, 229, 255); white-space: normal; overflow-wrap: normal;"><b>悲观锁、乐观锁</b>；共享锁、独占锁；<b>公平锁、非公平锁</b>；<b>可重入锁、非可重入锁</b>；<br />可中断锁、不可中断锁；<b>自旋锁、非自旋锁</b>；偏斜锁、轻量级锁、重量级锁；使用场景？<br />synchronized 关键字？与 Lock比较？读写锁（读读共享、其他均互斥）<br />什么是自旋锁？优点？使用场景？JVM 对锁进行的优化点，包括自适应的自旋锁、锁消除、锁粗化、偏向锁、轻量级锁、重量级锁等。</div></div></div></foreignObject><text x="310" y="261" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">悲观锁、乐观锁；共享锁、独占锁；公平锁、非公平锁；可重入锁、非可重入锁；可中断锁、不可中断锁；自旋锁、非自旋锁；偏斜锁、轻量级锁、重量级锁；使用场景？synchronized 关键字？与 Lock比较？读写锁（读读共享、其他均互斥）...</text></switch></g><rect x="307.5" y="321" width="472.5" height="58" fill="none" stroke="none" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 471px; height: 1px; padding-top: 328px; margin-left: 310px;"><div data-drawio-colors="color: rgb(0, 0, 0); background-color: #CCFFFF; " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; background-color: rgb(204, 255, 255); white-space: normal; overflow-wrap: normal;"><b>HashMap为啥线程不安全？<br />对比 ConcurrentHashMap 在 Java7与8的区别？与Hashtable对比？<br />CopyOnWriteArrayList使用场景（读多写少）<br /></b></div></div></div></foreignObject><text x="310" y="340" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">HashMap为啥线程不安全？...</text></switch></g><rect x="307.5" y="370" width="492.5" height="100" fill="none" stroke="none" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 491px; height: 1px; padding-top: 377px; margin-left: 310px;"><div data-drawio-colors="color: rgb(0, 0, 0); background-color: #FFE6CC; " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; background-color: rgb(255, 230, 204); white-space: normal; overflow-wrap: normal;">什么是阻塞队列？队列中的哪3组方法？<br />常见5中阻塞队列？（ArrayBlockingQueue、LinkedBlockingQueue、SynchronousQueue、PriorityBlockingQueue 和 DelayQueue）<br />阻塞队列并发安全原理：主要利用了 ReentrantLock 以及它的 Condition 来实现；<br />非阻塞队列并发安全原理：利用 CAS 保证线程安全。<br />如何选择适合自己的阻塞队列？从功能、容量、能否扩容、内存结构及性能这些方面去考虑</div></div></div></foreignObject><text x="310" y="389" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">什么是阻塞队列？队列中的哪3组方法？...</text></switch></g><rect x="307.5" y="460" width="492.5" height="80" fill="none" stroke="none" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 491px; height: 1px; padding-top: 467px; margin-left: 310px;"><div data-drawio-colors="color: rgb(0, 0, 0); background-color: #FFCCCC; " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; background-color: rgb(255, 204, 204); white-space: normal; overflow-wrap: normal;">6种原子类：基本类型原子类、数组类型原子类、引用类型原子类、升级类型原子类、Adder 和 Accumulator。<br />AtomicInteger 在高并发下性能不好以及如何解决？使用 LongAdder 来解决这个问题；<br />LongAdder 内部的原理，对比了原子类和 volatile（可见性问题）<br />原子类与synchronized对比？</div></div></div></foreignObject><text x="310" y="479" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">6种原子类：基本类型原子类、数组类型原子类、引用类型原子类、升级类型原子类、Adder 和 Accumulator。...</text></switch></g><rect x="307.5" y="540" width="492.5" height="65" fill="none" stroke="none" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 491px; height: 1px; padding-top: 547px; margin-left: 310px;"><div data-drawio-colors="color: rgb(0, 0, 0); background-color: #FFCCFF; " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; background-color: rgb(255, 204, 255); white-space: normal; overflow-wrap: normal;">ThreadLocal使用场景：用作<b>每个线程保存独享的对象</b>，比如日期工具类；ThreadLocal 给每个线程去<b>保存场景、上下文信息</b>，以便后续的方法更方便的获取其信息，避免了传参。<br />它只是在每个线程内有个资源的副本而已，而每个副本都是各线程独享的。<b>Thread、ThreadLocal 及 ThreadLocalMap</b> 三者之间的关系，使用 <b>remove</b> 方法来防止内存泄漏</div></div></div></foreignObject><text x="310" y="559" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">ThreadLocal使用场景：用作每个线程保存独享的对象，比如日期工具类；ThreadLocal 给每个线程去保存场景、上下文信息，以便后续的方法更方便的获取其信息，避免了传参。...</text></switch></g><rect x="307.5" y="605" width="492.5" height="57" fill="none" stroke="none" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 491px; height: 1px; padding-top: 612px; margin-left: 310px;"><div data-drawio-colors="color: rgb(0, 0, 0); background-color: #FFF2CC; " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; background-color: rgb(255, 242, 204); white-space: normal; overflow-wrap: normal;">对比Callable与Runable？与Future类关系？Future主要功能：把运算的过程放到子线程去执行，再通过 Future 去控制执行过程，最后获取到计算结果。提高运行效率（<b>异步</b>思想）<br />使用 Future 时注意，如用 for 循环批量获取 Future 的结果时容易<b>阻塞</b>，应该使用超时限制</div></div></div></foreignObject><text x="310" y="624" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">对比Callable与Runable？与Future类关系？Future主要功能：把运算的过程放到子线程去执行，再通过 Future 去控制执行过程，最后获取到计算结果。提高运行效率（异步思想）...</text></switch></g><rect x="307.5" y="660" width="492.5" height="80" fill="none" stroke="none" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 491px; height: 1px; padding-top: 667px; margin-left: 310px;"><div data-drawio-colors="color: rgb(0, 0, 0); background-color: #FFE599; " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; background-color: rgb(255, 229, 153); white-space: normal; overflow-wrap: normal;"><b>Semaphore 信号量</b>：使用场景？用法？注意点？信号量是支持跨线程、跨线程池的<br /><b>CountDownLatch</b>：在构造函数传入“倒数”次数，由需要等待的线程去调用 await 方法来等待<br /><b>CyclicBarriar</b>：与前者对比，用法相似，作用对象、可重用性不同及执行动作的能力不同。<br /><b>Condition</b>：和 wait / notify / notifyAll 的关系？如果说 Lock 是用来代替 synchronized 的，那么 Condition 就是用来代替相对应的 Object 的 wait / notify / notifyAll 的</div></div></div></foreignObject><text x="310" y="679" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">Semaphore 信号量：使用场景？用法？注意点？信号量是支持跨线程、跨线程池的...</text></switch></g><rect x="307.5" y="785.5" width="492.5" height="69" fill="none" stroke="none" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 491px; height: 1px; padding-top: 793px; margin-left: 310px;"><div data-drawio-colors="color: rgb(0, 0, 0); background-color: #FFCCFF; " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; background-color: rgb(255, 204, 255); white-space: normal; overflow-wrap: normal;">什么是 <b>Java 内存模型</b>？什么是<b>重排序</b>？什么是<b>原子性</b>？java中的原子操作有哪些？long和double原子性的特殊性？什么是<b>可见性</b>？（前一个操作的结果在第二个操作执行时可见）<br /><b>volatile</b>2个作用：<b>保证可见性</b>以及一定程度上<b>禁止重排序</b>。<br />在单例模式的双重检查锁模式为什么必须加 volatile ？主要是为了<b>保证线程安全</b>。</div></div></div></foreignObject><text x="310" y="805" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">什么是 Java 内存模型？什么是重排序？什么是原子性？java中的原子操作有哪些？long和double原子性的特殊性？什么是可见性？（前一个操作的结果在第二个操作执行时可见）...</text></switch></g><rect x="307.5" y="865" width="492.5" height="70" fill="none" stroke="none" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 491px; height: 1px; padding-top: 872px; margin-left: 310px;"><div data-drawio-colors="color: rgb(0, 0, 0); background-color: #FF9999; " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; background-color: rgb(255, 153, 153); white-space: normal; overflow-wrap: normal;">CAS（Compare-And-Swap）核心思想：通过将<b>内存中的值</b>与<b>指定数据</b>进行<b><font color="#ffffff">比较</font></b>，当这两个<b>数值一样</b>时，才将内存中的数据<b><font color="#ffffff">替换</font></b>为新的值，整个过程具备<b>原子性</b>。<br />CAS应用：<b>并发容器</b>、<b>数据库</b>以及<b>原子类</b>中应用。<br />CAS缺点：<b>ABA 问题</b>、<b>自旋时间过长</b>问题，以及<b>线程安全的范围不能灵活控制</b>问题。</div></div></div></foreignObject><text x="310" y="884" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">CAS（Compare-And-Swap）核心思想：通过将内存中的值与指定数据进行比较，当这两个数值一样时，才将内存中的数据替换为新的值，整个过程具备原子性。...</text></switch></g><rect x="307.5" y="945" width="492.5" height="70" fill="none" stroke="none" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 491px; height: 1px; padding-top: 952px; margin-left: 310px;"><div data-drawio-colors="color: rgb(0, 0, 0); background-color: #FFCCE6; " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; background-color: rgb(255, 204, 230); white-space: normal; overflow-wrap: normal;">什么是<b>死锁</b>？两个或多个线程（或进程）被无限期地阻塞，相互等待对方手中资源的状态就是死锁。<br />死锁<b>4个条件</b>？互斥条件、请求与保持条件、不剥夺条件和循环等待条件。<br />3种解决死锁的策略：避免策略、检测与恢复策略、鸵鸟策略。</div></div></div></foreignObject><text x="310" y="964" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">什么是死锁？两个或多个线程（或进程）被无限期地阻塞，相互等待对方手中资源的状态就是死锁。死锁4个条件？互斥条件、请求与保持条件、不剥夺条件和循环等待条件。...</text></switch></g><rect x="307.5" y="1025" width="492.5" height="70" fill="none" stroke="none" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 491px; height: 1px; padding-top: 1032px; margin-left: 310px;"><div data-drawio-colors="color: rgb(0, 0, 0); background-color: #FFCCFF; " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; background-color: rgb(255, 204, 255); white-space: normal; overflow-wrap: normal;">final用在<b>变量上、方法上、类上</b>的作用？<br />为什么加了 final 却依然无法拥有“不变性”？主要原因是 <b>final 修饰的对象</b>，<b>内容依然可以变</b>。<br />为什么 String 被设计为是不可变的？好处分别是可以<b>利用字符串常量池</b>、<b>用作 HashMap 的 key</b>、<b>缓存 HashCode</b> 以及<b>保证线程安全</b>。</div></div></div></foreignObject><text x="310" y="1044" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">final用在变量上、方法上、类上的作用？...</text></switch></g><rect x="307.5" y="1120" width="492.5" height="40" fill="none" stroke="none" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 491px; height: 1px; padding-top: 1127px; margin-left: 310px;"><div data-drawio-colors="color: rgb(0, 0, 0); background-color: #FFCCCC; " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; background-color: rgb(255, 204, 204); white-space: normal; overflow-wrap: normal;">为什么需要 AQS 以及它内部的原理是怎样的？<br />AQS 在 CountDownLatch 类中是如何应用的？</div></div></div></foreignObject><text x="310" y="1139" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">为什么需要 AQS 以及它内部的原理是怎样的？...</text></switch></g></g><switch><g requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"/><a transform="translate(0,-5)" xlink:href="https://www.diagrams.net/doc/faq/svg-export-text-problems" target="_blank"><text text-anchor="middle" font-size="10px" x="50%" y="100%">Text is not SVG - cannot display</text></a></switch></svg>